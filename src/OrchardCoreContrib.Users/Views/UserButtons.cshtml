@using OrchardCore.Entities
@using OrchardCore.Users.Models
@using OrchardCore.Users.ViewModels
@using OrchardCoreContrib.Users.Models
@model SummaryAdminUserViewModel
@{
    var user = Model.User as User;
}
<a asp-action="Edit" asp-route-id="@user.Id" class="btn btn-primary btn-sm">@T["Edit"]</a>
@if (user.UserName == User.Identity.Name)
{
    <a class="btn btn-danger btn-sm disabled" itemprop="RemoveUrl UnsafeUrl">@T["Delete"]</a>
}
else
{
    <a asp-action="Delete" asp-route-id="@user.Id" class="btn btn-danger btn-sm" itemprop="RemoveUrl UnsafeUrl">@T["Delete"]</a>
}
<a asp-action="EditPassword" asp-route-id="@user.Id" class="btn btn-secondary btn-sm">@T["Edit Password"]</a>
@if (!user.EmailConfirmed && Site.As<RegistrationSettings>().UsersMustValidateEmail)
{
    <form method="post" class="d-inline-block">
        <input name="id" type="hidden" value="@user.Id" />
        <button asp-action="SendVerificationEmail" asp-controller="Registration" class="btn btn-info btn-sm">@T["Send verification email"]</button>
    </form>
}
@if (Site.As<ImpersonationSettings>().EnableImpersonation)
{
    <a asp-controller="Impersonation" asp-action="ImpersonateUser" asp-route-userId="@user.Id" class="btn btn-success btn-sm @(user.UserName == User.Identity.Name ? "disabled" : string.Empty)">@T["Impersonate"]</a>
}